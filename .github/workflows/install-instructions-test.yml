name: Install Instructions
on: push

jobs:
  install-instructions:
    if: false
    env:
      BASE_URL: https://deploy-preview-5763--kongdocs.netlify.app
    strategy:
      fail-fast: false
      matrix:
        distro: [ubuntu, rhel, amazon-linux, debian]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      # Increase number of watchers to fix tests
      - run: sudo sysctl -w fs.inotify.max_user_watches=524288
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      # Configure Ruby to build Jekyll site
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
        if: contains(env.BASE_URL, 'localhost')
      - name: Ruby gem cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
        if: contains(env.BASE_URL, 'localhost')
      - name: Bundle Install
        run: |
          bundle config path ${{ github.workspace }}/vendor/bundle
          bundle install --jobs 4 --retry 3
        if: contains(env.BASE_URL, 'localhost')

      - uses: actions/setup-node@v3
        with:
          node-version: "16"
        if: contains(env.BASE_URL, 'localhost')

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
        if: contains(env.BASE_URL, 'localhost')

      # Build the Docs
      - name: Build Docs
        run: |
          npm ci
          ./node_modules/.bin/gulp build
        if: contains(env.BASE_URL, 'localhost')

      - name: Run Server
        run: |
          npm install -g wait-on netlify-cli
          netlify dev & wait-on http://localhost:8888
        if: contains(env.BASE_URL, 'localhost')

      - name: Run Install tests
        env:
          DISTRO: ${{ matrix.distro }}
          CONTINUE_ON_ERROR: 1
          IGNORE_SKIPS: 1
          EXPECTED_FAILURES_EXIT_CODE: 0
        run: |
          cd tools/install-tester
          npm ci
          node index.js
